#########
# Author:        rmp
# Maintainer:    mw6
# Last Modified: 2008-10-22
#
# decoration for (www|dev).wtccc.org and ccc.sanger.ac.uk
#
package SiteDecor::ccc;
use strict;
use warnings;
use SangerPaths qw(ccc);
use base qw(SiteDecor);
use Sys::Hostname;
use ccc::AppKit::allowed_url;  # in testing: a bit faster

our $VERSION = 0.2;

sub init_defaults {
  my $self = shift;
  my $def  = {
	      stylesheet     => ['/css/wtccc.css'],
	      redirect_delay => 5,
        jsfile         => ['/js/menus.js'],
	      bannercase     => 'ucfirst',
	      author         => 'webmaster',
	      decor          => 'full',
	     };
  $self->merge($def);
}

sub html_headers {
  my $self   = shift;
  my $banner = $self->{'banner'} || "";
  my $title  = $self->{'title'}  || $banner || "WTCCC: The Wellcome Trust Case Control Consortium";

  my ($hostname)   = (hostname()) =~ /^([^\.]+)/mx;
  my $html_headers = $self->doc_type().qq(<html>
  <head>
    <title>$title</title>
@{[map {qq(    <link rel="stylesheet" type="text/css" href="$_" />\n); } @{$self->stylesheet()}]}
@{[map {qq(    <script type="text/javascript" src="$_" ></script>\n);  } @{$self->jsfile()}]}
  </head><body onload="setformfocus()"><!-- host: $hostname-->);
  return $html_headers;
}

sub site_headers {
    my $self = shift;

return qq(<div class="pagehead">
  <div class="banner"><span class="wt">Wellcome Trust</span> Case Control Consortium</div>
  <div class="mbar">
    @{[join '', @{$self->_menu_items()}]}
  <div class="spacer">&nbsp;</div></div><!-- end mbar -->
</div><!-- end pagehead -->
<div id="main_content">\n);
# '<div id="wrapper">'.ccc::leftbar->new($self);
}

sub site_footers {
  my $self = shift;
  return qq(
</div><!-- end main_content -->
</body>
</html>\n);
}

# rewritten _menu_items
#  now relies on SiteDecor's methods to parse {'inifile'} to {'navlist'}
#  and then generates the menus from this.

sub _menu_items { # requires username
my $self = shift;
my $user = $self->username();
my $url_cache; if ($user) { $url_cache = ccc::AppKit::Allowed_Url->new($user) };
my $navlist = $self->{'navlist'}; # was $self->{'handler'}{'navlist'}
#print "!",Dumper(\$navlist),"!<BR>",Dumper(\$self);

my %menu; my %popup; my $subject; my @subjects;
foreach ( qw(navigator navigator2 navigator3) ) {
  if ('ARRAY' eq ref $navlist->{$_}) {
    my (@content) = @{$navlist->{$_}};
    foreach (@content) {
      if ('HASH' eq ref $_ ) {
        my ($text, $link) = ($_->{'text'},$_->{'link'});
        if ('Registered access' eq $subject) {
          if ($user && $url_cache->allowed_url($link)) {
            $popup{$subject} .= qq(    <a href="$link">$text</a>\n); }
          else {}
          }
        else {
          $popup{$subject} .= qq(    <a href="$link">$text</a>\n); }
      }
    else {
      $subject = $_; # used later when we get a hash
      my $legend = ($user && 'Registered access' eq $subject) ? qq( title="$user logged in") : '';
      $menu{$_} = "  <div$legend>$_</div>\n";
      $popup{$_} = "";
      push @subjects,$_;
      }
    } # next content
  } # end if ARRAY
} # next navigator

$popup{'Registered access'} .= ($user) ?
                                   qq(<a title="logout $user" href="/logout">Logout</a>\n)
                                 : qq(<a accesskey="l" href="/login.shtml">Login</a>\n);

my $i=0;
my @menu_items = ();
foreach (@subjects) {
  if ($popup{$_}) {
    push @menu_items,qq[<div class="menu" id="menu$i" onmouseover="show($i)" onmouseout="hide($i)">\n$menu{$_}];
    push @menu_items,qq[  <div class="popup" id="popup$i" onmouseover="show($i)" onmouseout="hide($i)">\n$popup{$_}  </div>\n</div>\n]; }
  else {
    push @menu_items,qq[<div class="menu">\n  $menu{$_}</div>\n];
    }
  $i++;
  }
return \@menu_items;
#  return join q(),@{$self->my_menu_items}; #empty string
}

sub stylesheet {
  my $self = shift;
  if (@_) {
    $self->{'stylesheet'} = [];
    foreach (@_)
      {
      if ('ARRAY' eq ref $_)
	{
        foreach (@{$_})
          {
          push @{$self->{'stylesheet'}}, $_
          }
	}
      else
        {
        push @{$self->{'stylesheet'}}, $_
        }
      }
  };
  return $self->{'stylesheet'};
}

sub doc_type {
  return qq(<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">\n);
}

1;
